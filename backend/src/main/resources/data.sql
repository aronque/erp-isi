--TABELAS USUÁRIO
CREATE TABLE IF NOT EXISTS TIPO_USUARIO (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    TIPO VARCHAR(7),
    DESCRICAO VARCHAR(100),
    PRIMARY KEY(ID)
);

CREATE TABLE  IF NOT EXISTS USUARIOS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    NOME VARCHAR(255),
    EMAIL VARCHAR(255),
    SENHA VARCHAR(18),
    TIPO_ID BIGINT,
    PRIMARY KEY(ID)
);

ALTER TABLE USUARIOS DROP CONSTRAINT IF EXISTS FK_TIPO_USUARIO;
ALTER TABLE IF EXISTS USUARIOS ADD CONSTRAINT FK_TIPO_USUARIO FOREIGN KEY (TIPO_ID) REFERENCES TIPO_USUARIO;
------------------------------------------------------------------------------------------------------------------------
--TABELAS FORNECEDOR
CREATE TABLE IF NOT EXISTS ENDERECOS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    RUA VARCHAR(255),
    NUMERO VARCHAR(10),
    BAIRRO VARCHAR(255),
    CIDADE VARCHAR(255),
    ESTADO_UF VARCHAR(2),
    CEP VARCHAR(9),
    PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS FORNECEDORES (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    NOME VARCHAR(255),
    CNPJ VARCHAR(20),
    CONTATO VARCHAR(60),
    ENDERECO_ID BIGINT,
    PRIMARY KEY(ID)
);

ALTER TABLE FORNECEDORES DROP CONSTRAINT IF EXISTS FK_END_FORNECEDORES;
ALTER TABLE IF EXISTS FORNECEDORES ADD CONSTRAINT FK_END_FORNECEDORES FOREIGN KEY (ENDERECO_ID) REFERENCES ENDERECOS;

------------------------------------------------------------------------------------------------------------------------
--TABELAS PRODUTO
CREATE TABLE IF NOT EXISTS PRODUTOS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    NOME VARCHAR(255),
    QNT_ESTOQUE INT,
    PRECO FLOAT8,
    FORNECEDOR_ID BIGINT,
    PRIMARY KEY(ID)
);

ALTER TABLE PRODUTOS DROP CONSTRAINT IF EXISTS FK_FORN_PRODUTOS;
ALTER TABLE IF EXISTS PRODUTOS ADD CONSTRAINT FK_FORN_PRODUTOS FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDORES;

------------------------------------------------------------------------------------------------------------------------
--TABELAS PEDIDO
CREATE TABLE IF NOT EXISTS PEDIDOS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    DATA_PEDIDO DATE,
    STATUS_PEDIDO VARCHAR(20),
    USUARIO_ID BIGINT,
	FORNECEDOR_ID BIGINT,
	DTYPE VARCHAR(20),
    PRIMARY KEY(ID)
);

ALTER TABLE PEDIDOS DROP CONSTRAINT IF EXISTS FK_USER_PEDIDOS;
ALTER TABLE PEDIDOS DROP CONSTRAINT IF EXISTS FK_FORN_PEDIDOS;
ALTER TABLE IF EXISTS PEDIDOS ADD CONSTRAINT FK_USER_PEDIDOS FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS ON DELETE SET NULL;
ALTER TABLE IF EXISTS PEDIDOS ADD CONSTRAINT FK_FORN_PEDIDOS FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDORES ON DELETE SET NULL;

CREATE TABLE IF NOT EXISTS ITEM_PEDIDO (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY,
    QUANTIDADE INT,
    PEDIDO_ID BIGINT,
    PRODUTO_ID BIGINT,
    PRIMARY KEY(ID)
);

--ALTERAR PARA REFERENCIAR PEDIDO
ALTER TABLE ITEM_PEDIDO DROP CONSTRAINT IF EXISTS FK_PED_PRODUTOS;
ALTER TABLE ITEM_PEDIDO DROP CONSTRAINT IF EXISTS FK_PROD_ITEM;

ALTER TABLE IF EXISTS ITEM_PEDIDO ADD CONSTRAINT FK_PED_PRODUTOS FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS;
ALTER TABLE IF EXISTS ITEM_PEDIDO ADD CONSTRAINT FK_PROD_ITEM FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTOS ON DELETE SET NULL;
------------------------------------------------------------------------------------------------------------------------

INSERT INTO TIPO_USUARIO VALUES(1, 'ESTOQUE', 'Funcionario do estoque com acesso limitado');
INSERT INTO TIPO_USUARIO VALUES(2, 'GERENTE', 'Funcionario nivel gerente do estoque com acesso total');
INSERT INTO TIPO_USUARIO VALUES(3, 'COMUM', ' Funcionario comum da empresa que possui acesso a abertura de pedido');
INSERT INTO TIPO_USUARIO VALUES(4, 'SUPORTE', 'Operador do suporte ao usuário do sistema');

INSERT INTO USUARIOS (NOME, EMAIL, SENHA, TIPO_ID)
VALUES
	('ADM', 'adm@gmail.com', 'admisierp', 2),
	('João Silva', 'joao.silva@gmail.com', 'joao123', 3),
	('Maria Oliveira', 'maria.oliveira@Gmail.com', 'maria456',3),
	('Pedro Santos', 'pedro.santos@gmail.com', 'pedro789',3),
	('Alberto Estoquista', 'alberto@empresa.com', 'alberto123',1),
	('Beto Suporte', 'beto@suporte.com', 'betinho666',4);

-- Inserir um novo endereço
INSERT INTO ENDERECOS (RUA, NUMERO, BAIRRO, CIDADE, ESTADO_UF, CEP)
VALUES
	('Rua das Flores', '428', 'Centro', 'Torrinha', 'SP', '12345-678'),
	('Avenida Principal', '111', 'Vila Central', 'Pinheiros', 'SP', '12345-000'),
	('Rua dos Bobos', '0', 'Jardim Bonito', 'Bauru', 'SP', '12345-666');

-- Inserir um novo fornecedor
INSERT INTO FORNECEDORES (NOME, CNPJ, CONTATO, ENDERECO_ID)
VALUES
	('Torrinha LTDA', '12345678901234', 'Contato 1', (SELECT ID FROM ENDERECOS WHERE RUA = 'Rua das Flores')),
	('Bauru Artigos', '56789012345678', 'Contato 2', (SELECT ID FROM ENDERECOS WHERE RUA = 'Rua dos Bobos')),
	('Pinheiros INC', '90123456789012', 'Contato 3', (SELECT ID FROM ENDERECOS WHERE RUA = 'Avenida Principal'));

-- Inserir produtos referenciando os fornecedores
INSERT INTO PRODUTOS (NOME, QNT_ESTOQUE, PRECO, FORNECEDOR_ID)
VALUES
	('Oculos', 99, 19.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Torrinha LTDA')),
	('Cadeira', 99, 29.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Bauru Artigos')),
	('Mesa', 99, 39.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Pinheiros INC')),
	('Chaveiro', 99, 39.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Bauru Artigos')),
	('Tapete', 99, 39.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Pinheiros INC')),
	('Sofa', 99, 39.99, (SELECT ID FROM FORNECEDORES WHERE NOME = 'Pinheiros INC'));

-- Inserir pedidos
INSERT INTO PEDIDOS (DATA_PEDIDO, STATUS_PEDIDO, FORNECEDOR_ID, DTYPE)
VALUES
	(NOW()::DATE, 'CRIADO', 1, 'PedidoFornecedor'),
	(NOW()::DATE, 'CRIADO', 2, 'PedidoFornecedor'),
	(NOW()::DATE, 'PROCESSANDO', 3, 'PedidoFornecedor'),
	(NOW()::DATE, 'CRIADO', 2, 'PedidoFornecedor'),
	(NOW()::DATE, 'CRIADO', 2, 'PedidoFornecedor'),
	(NOW()::DATE, 'FINALIZADO', 3, 'PedidoFornecedor'),
	(NOW()::DATE, 'CRIADO', 1, 'PedidoFornecedor'),
	(NOW()::DATE, 'PROCESSADO', 2, 'PedidoFornecedor'),
	(NOW()::DATE, 'FINALIZADO', 2, 'PedidoFornecedor'),
	(NOW()::DATE, 'PROCESSADO', null, 'PedidoSaidaEstoque'),
	(NOW()::DATE, 'CRIADO', null, 'PedidoSaidaEstoque'),
	(NOW()::DATE, 'PROCESSADO', null, 'PedidoSaidaEstoque'),
	(NOW()::DATE, 'CRIADO', null, 'PedidoSaidaEstoque'),
	(NOW()::DATE, 'PROCESSANDO', null, 'PedidoSaidaEstoque'),
	(NOW()::DATE, 'FINALIZADO', null, 'PedidoSaidaEstoque');

--Inserir itens dos pedidos
INSERT INTO ITEM_PEDIDO(QUANTIDADE, PEDIDO_ID, PRODUTO_ID)
VALUES
	(10, 1, 1),
	(20, 2, 2),
	(30, 2, 4),
	(15, 3, 3),
	(25, 3, 6),
	(10, 4, 4),
	(26, 5, 2),
	(12, 6, 5),
	(11, 7, 1),
	(43, 8, 2),
	(32, 8, 4),
	(10, 9, 2),
	(16, 10, 1),
	(19, 10, 2),
	(32, 11, 5),
	(17, 12, 5),
	(35, 12, 6),
	(23, 12, 4),
	(7, 13, 2),
	(3, 13, 1),
	(16, 14, 4),
	(21, 15, 4);
